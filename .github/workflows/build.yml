name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      # repo checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # use node-lts
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      # install dependencies
      - name: Install dependencies
        run: npm install

      # build linux version
      - name: Build linux version
        run: npm run make:linux

      # upload linux artifact
      - name: Upload linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          path: out/make

  build-windows:
    runs-on: windows-latest
    steps:
      # repo checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # use node-lts
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      # install dependencies
      - name: Install dependencies
        run: npm install

      # build windows version
      - name: Build windows version
        run: npm run make:win

      # upload windows artifact
      - name: Upload windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: out/make

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      # download linux artifact
      - name: Download linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-artifact
          path: linux_artifacts

      # download windows artifact
      - name: Download windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-artifact
          path: windows_artifacts

      # create release with new tag
      - id: create_release
        name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Automated release from GitHub Actions."
          draft: false
          prerelease: false

      # upload linux release asset
      - name: Upload Linux Release Asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: linux_artifacts/*.zip

      # upload windows release asset
      - name: Upload Windows Release Asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: windows_artifacts/*.zip
